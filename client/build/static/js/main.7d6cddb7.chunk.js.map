{"version":3,"sources":["images/logo_white.png","db/index.js","auth/firebase.js","components/Navbar.js","components/DisplayingTags.js","components/PostCards.js","components/HomePosts.js","routes/Home.js","auth/Auth.js","routes/SignUp.js","routes/AdminSignUp.js","routes/Login.js","auth/PrivateRoute.js","components/TitleBar.js","routes/Settings.js","components/DisplayUser.js","components/UserTab.js","components/MetadataTagTab.js","components/MetadataUserTab.js","components/DisplayTag.js","components/TagTab.js","routes/AdminPage.js","components/SpecializationButton.js","routes/UserTags.js","components/DisplayingTagsPost.js","components/OriginalPoster.js","components/Response.js","components/Failure.js","components/AddResponse.js","routes/ViewPost.js","components/PostCreate.js","routes/CreatePost.js","App.js","serviceWorker.js","index.js","css/vectorlogo.png"],"names":["module","exports","require","config","algoliasearch","process","searchClient","db","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Navbar","props","handleSignOut","firebase","auth","signOut","Cookies","remove","window","localStorage","removeItem","history","push","resetSpecializations","setState","got_specializations","default_tags","axios","method","url","withCredentials","then","response","string_tags","JSON","stringify","data","tags_array","parse","key","hasOwnProperty","state","setItem","updateForumDisp","catch","error","console","log","handleChange","e","value","tags","setTextSearch","event","target","length","searching","resetTextSearch","forum_tags","success","x","text","undefined","getItem","defaults","this","className","onClick","src","logo","height","alt","SearchBox","searchAsYouType","onChange","translations","placeholder","Dropdown","fluid","multiple","selection","scrolling","search","loading","defaultValue","options","clearable","bind","Icon","link","name","size","color","inverted","React","Component","withRouter","DisplayingTags","map","item","i","Label","PostCards","pathname","post_id","toString","handleClick","title","tag_ids","date_time","HomePosts","setTextSearchState","textSearch","resetTextSearchState","posts","users","updated","company","forumEmpty","updateTagSearch","status","keyList","forEach","post","tag","includes","searchTags","visible","InstantSearch","indexName","PostContainer","Results","Hits","hitComponent","hit","TextSearchPosts","TagSearchPosts","getName","userid","firstName","lastName","RedirectButton","user_id","karma","content","responses","objectID","connectStateResults","searchState","searchResults","children","nbHits","query","Home","AuthContext","createContext","UpdateContext","cookie","AuthProvider","useState","currentUser","setCurrentUser","isLoaded","setLoaded","updateAuth","result","useEffect","addChangeListener","Provider","SignUp","isLoading","handleSignUp","preventDefault","elements","first_name","last_name","email","password","registration_ID","match","params","id","signInWithEmailAndPassword","getIdToken","idToken","set","path","setTimeout","alert","redirectLogin","redirectSpecializations","uuid","pic","onSubmit","type","AdminSignUp","passwordcopy","Login","update","useContext","PrivateRoute","RouteComponent","component","isDynamic","dynamic","rest","render","routeProps","to","TitleBar","Settings","handleResetPassword","confirmPassword","confirm","newPassword","user_email","admin","userEmail","Segment","basic","textAlign","style","paddingLeft","Divider","horizontal","redirectAdmin","DisplayUser","removed","checkemail","userID","fitted","UserTab","loading_user","userList","Object","keys","Tab","Pane","reset","MetadataTagTab","tagList","MetadataUserTab","DisplayTag","tag_id","tagName","TagTab","loading_tag","currTag","tagname","AdminPage","panes","menuItem","SpecializationButton","addSpecialization","thisTag","user_info","newJSON","removeSpecialization","user_tags","tagButton","checkSpecialization","UserTags","resetTags","location","reload","info","DisplayingTagsPost","OriginalPoster","firstPoster","postID","datetime","isFollowing","hasEndorsed","scrollEndorsed","Response","upvoteSwitch","userUpvoted","response_id","responseID","endorseSwitch","endorsed","postUnendorse","isPostEndorsed","postEndorse","ref","myRef","Failure","AddResponse","addResponse","responseText","responseUpdate","ViewPost","responseHTML","obj","index","postEndorsed","responseIDs","endorsedRef","createdPost","upvotedMerge","arr1","arr2","refreshForNewResponse","refreshResponse","endorsedID","createRef","results","responseBools","values","latestResponse","responseObjs","failed","current","scrollIntoView","behavior","offsetTop","lockResponse","loaded","OP","href","PostCreate","dropdownOpt","dropdownChange","dropdownVal","CreatePost","tags_selected","sendPost","postContent","replace","getTags","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7d6cddb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.b50a6676.png\";","import algoliasearch from 'algoliasearch';\r\nrequire('dotenv').config();\r\n\r\nconst client = algoliasearch(process.env.REACT_APP_ALGOLIA_APP_ID, process.env.REACT_APP_ALGOLIA_API_KEY);\r\n\r\nconst searchClient = algoliasearch(\r\n   process.env.REACT_APP_ALGOLIA_APP_ID,\r\n   process.env.REACT_APP_ALGOLIA_SEARCH_API_KEY\r\n);\r\n\r\nexport { client, searchClient };\r\n\r\n","require('dotenv').config();\r\nvar firebase = require('firebase');\r\n\r\nconst db = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MEASUREMENT_ID,\r\n    appId: process.env.REACT_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n});\r\n\r\nexport default db;\r\n","import React from 'react';\r\nimport {Dropdown, Icon} from 'semantic-ui-react';\r\nimport logo from '../images/logo_white.png';\r\nimport '../css/index.css'\r\nimport {\r\n    SearchBox\r\n} from 'react-instantsearch-dom';\r\nimport axios from 'axios';\r\nimport firebase from '../auth/firebase';\r\nimport Cookies from 'universal-cookie';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../css/Navbar.css'\r\n\r\n\r\nconst tags = [\r\n    {\r\n        key: 'Machine Learning',\r\n        text: 'Machine Learning',\r\n        value: 'Machine Learning'\r\n    },\r\n    {\r\n        key: 'Python',\r\n        text: 'Python',\r\n        value: 'Python'\r\n    },\r\n    {\r\n        key: 'help-needed',\r\n        text: 'help-needed',\r\n        value: 'help-needed'\r\n    },\r\n    {\r\n        key: 'announcement',\r\n        text: 'announcement',\r\n        value: 'announcement'\r\n    },\r\n    {\r\n        key: 'events',\r\n        text: 'events',\r\n        value: 'events'\r\n    },\r\n    {\r\n        key: 'lost and found',\r\n        text: 'lost and found',\r\n        value: 'lost and found'\r\n    },\r\n    {\r\n        key: 'C++',\r\n        text: 'C++',\r\n        value: 'C++'\r\n    },\r\n    {\r\n        key: 'React',\r\n        text: 'React',\r\n        value: 'React'\r\n    }\r\n]\r\n\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tags: [],\r\n            forum_tags: [],\r\n            default_tags: [],\r\n            value: '',\r\n            searching: false,\r\n            got_specializations: false\r\n        }\r\n\r\n    }\r\n\r\n    handleSignOut = () => {\r\n        firebase.auth().signOut();\r\n\r\n        // removing cookie\r\n        const cookies = new Cookies();\r\n        cookies.remove('auth');\r\n\r\n        window.localStorage.removeItem('current_tags');\r\n        window.localStorage.removeItem('original_tags');\r\n\r\n        // redirect to home page\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/tags/getTags',\r\n        })\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    for (var key in response.data.tags) {\r\n                        var x = key;\r\n                        this.setState({ forum_tags: [...this.state.forum_tags, { key: x, text: x, value: x }] });\r\n                    }\r\n\r\n                    if (localStorage.getItem('current_tags') == undefined) {\r\n                        axios.defaults.withCredentials = true;\r\n                        axios({\r\n                            method: 'GET',\r\n                            url: 'https://kiwi-test-app.herokuapp.com/users/userTags',\r\n                            withCredentials: true\r\n                        })\r\n\r\n                            .then((response) => {\r\n                                var string_tags = JSON.stringify(response.data);\r\n                                var tags_array = JSON.parse(string_tags);\r\n\r\n                                for (var key in tags_array) {\r\n                                    if (tags_array.hasOwnProperty(key)) {\r\n                                        this.setState({ default_tags: [...this.state.default_tags, tags_array[key]] });\r\n                                    }\r\n                                }\r\n                                window.localStorage.setItem('current_tags', string_tags);\r\n                                window.localStorage.setItem('original_tags', string_tags);\r\n                                console.log(window.localStorage.getItem(\r\n                                   'original_tags'\r\n                                ));\r\n                                \r\n\r\n                                this.props.updateForumDisp(this.state.default_tags);\r\n                                this.setState({ got_specializations: true });\r\n                                // Store the tags in local storage\r\n                            })\r\n                            .catch((error) => {\r\n\r\n                                console.log(error);\r\n\r\n                            });\r\n\r\n                    } else {\r\n                        var string_tags = window.localStorage.getItem('current_tags');\r\n                        console.log(string_tags);\r\n                        var tags_array = JSON.parse(string_tags);\r\n\r\n                        for (var key in tags_array) {\r\n                            if (tags_array.hasOwnProperty(key)) {\r\n                                this.setState({ default_tags: [...this.state.default_tags, tags_array[key]] });\r\n                            }\r\n                        }\r\n\r\n                        this.props.updateForumDisp(this.state.default_tags);\r\n\r\n                        this.setState({ got_specializations: true });\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    resetSpecializations = () => {\r\n        this.setState({ got_specializations: false, default_tags: [] });\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://kiwi-test-app.herokuapp.com/users/userTags',\r\n            withCredentials: true\r\n        })\r\n\r\n            .then((response) => {\r\n                var string_tags = JSON.stringify(response.data);\r\n                var tags_array = JSON.parse(string_tags);\r\n\r\n                for (var key in tags_array) {\r\n                    if (tags_array.hasOwnProperty(key)) {\r\n                        this.setState({ default_tags: [...this.state.default_tags, tags_array[key]] });\r\n                    }\r\n                }\r\n                window.localStorage.setItem('current_tags', string_tags);\r\n                window.localStorage.setItem('original_tags', string_tags);\r\n                \r\n\r\n                this.props.updateForumDisp(this.state.default_tags);\r\n                this.setState({ got_specializations: true });\r\n                // Store the tags in local storage\r\n            })\r\n            .catch((error) => {\r\n\r\n                console.log(error);\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n    //called when the tag dropdown changes\r\n    handleChange = (e, { value }) => {\r\n        this.setState({ tags: value });\r\n        this.props.updateForumDisp(value);\r\n\r\n        window.localStorage.setItem('current_tags', JSON.stringify(value));\r\n    }\r\n\r\n    //called when the search box changes\r\n    setTextSearch = (event => {\r\n        this.setState({ value: event.target.value }, () => {\r\n            if (this.state.value.length === 0) {\r\n                this.setState({ searching: false });\r\n                this.props.resetTextSearch();\r\n\r\n            } else if (!this.state.searching) {\r\n                this.setState({ searching: true });\r\n                this.props.setTextSearch();\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n\r\n    render() {\r\n        if (!this.state.got_specializations) {\r\n            return <h1> loading navbar... </h1>\r\n        }\r\n        return (\r\n            <div className=\"navbar_block\">\r\n                <div className={\"kiwiLogo\"}>\r\n                    <button className={\"invisibleButton\"} onClick={() => { this.props.history.push(\"/\") }}>\r\n                        <img src={logo} height={'40px'} alt={\"KIWI\"} />\r\n                    </button>\r\n                </div>\r\n                <div className={\"searchBar\"}>\r\n                    <SearchBox className={\"searching\"} searchAsYouType={true}\r\n                        onChange={this.setTextSearch}\r\n                        translations={{\r\n                            placeholder: \"What's your question?\",\r\n                        }} />\r\n                </div>\r\n                <div className={\"tagComponent\"}>\r\n                    <Dropdown fluid multiple selection scrolling search placeholder='Tags'\r\n                        onChange={this.handleChange}\r\n                        loading={(!this.state.got_specializations) ? true : false}\r\n                        defaultValue={this.state.default_tags}\r\n                        options={[...this.state.forum_tags]} clearable />\r\n                </div>\r\n                <div className={\"reset\"}>\r\n                    <button className={\"invisibleButton\"} onClick={this.resetSpecializations.bind(this)}>reset specializations</button>\r\n                </div>\r\n                <div className={\"settings\"}>\r\n                    <button className={\"invisibleButton\"} onClick={() => {this.props.history.push(\"/settings\")}}>\r\n                    <Icon link name=\"settings\" size={\"big\"} color='grey' inverted />\r\n                    </button>\r\n                </div>\r\n                <div className={\"logoutButton\"}>\r\n                    <button className={\"invisibleButton\"} onClick={this.handleSignOut}><Icon link name=\"sign out\" size={\"big\"} color='grey' inverted /></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react';\r\nimport \"../css/DisplayingTags.css\";\r\nimport {Label} from \"semantic-ui-react\";\r\n\r\n\r\nclass DisplayingTags extends React.Component {\r\n    render() {\r\n        let {tags} = this.props;\r\n        if(tags === undefined){\r\n            tags = [];\r\n        }\r\n        return(\r\n            <div className=\"tag-display\">\r\n                {tags.map((item, i) => \r\n                    <Label key={i} color='purple'> \r\n                        {item}\r\n                    </Label>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DisplayingTags;","import React from 'react';\r\nimport \"../css/PostCards.css\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport DisplayingTags from \"./DisplayingTags\";\r\n\r\nclass PostCards extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick() {\r\n        const {history} = this.props;\r\n        history.push({      //change to replace and add back button\r\n            pathname: '/viewPost/'+this.props.post_id.toString(), \r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div onClick={this.handleClick.bind(this)} className=\"post-cards\">\r\n                <h1 className=\"PostTitle\"> {this.props.title} </h1>\r\n                <div className=\"PostTags\">\r\n                    <DisplayingTags tags={this.props.tag_ids} />\r\n                </div>\r\n                <h3 className=\"Poster\"> {\"Created by: \" + this.props.name} </h3>\r\n                <h3 className=\"PostDate\"> {\"Date Created: \" + this.props.date_time} </h3>\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(PostCards);","import { searchClient } from '../db/index';\r\nimport React from 'react';\r\nimport '../css/index.css'\r\nimport '../css/HomePosts.css'\r\nimport Navbar from './Navbar';\r\nimport {\r\n    InstantSearch,\r\n    Hits,\r\n    connectStateResults\r\n} from 'react-instantsearch-dom';\r\nimport PostCards from './PostCards';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass HomePosts extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: [],\r\n            users: {},\r\n            textSearch: false,\r\n            updated: false,\r\n            company: \"empty\",\r\n            forumEmpty: false\r\n        };\r\n\r\n        this.updateTagSearch = this.updateTagSearch.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/users/company',\r\n        })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    this.setState({ company: response.data })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/users/allUsers',\r\n        })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    this.setState({ users: response.data });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/posts/',\r\n        })\r\n        .then((response) => { \r\n            if (response.data.success) { \r\n                this.setState({posts: response.data.posts});\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        }).then(() => {\r\n            if(this.state.posts === undefined || this.state.posts.length==0){\r\n                this.setState({forumEmpty: true});\r\n            }\r\n            else {\r\n                this.setState({forumEmpty: false});\r\n            }\r\n        })\r\n    }\r\n\r\n    //searching through posts state\r\n    searchTags(value, keyList) {\r\n        return this.state.posts.forEach(post => {\r\n            if (post.tag_ids !== undefined) {\r\n                post.tag_ids.forEach(tag => {\r\n                    if (value.includes(tag)) {\r\n                        keyList.push(post.key);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    //updates and queries every time tag is removed or added\r\n    updateTagSearch(value) {\r\n        let keyList = []\r\n        this.searchTags(value, keyList);\r\n        if (this.state.posts) {\r\n            this.setState(state => {\r\n                state.posts.forEach(\r\n                    post => {\r\n                        if (value.length === 0) {\r\n                            post.visible = true;\r\n                        }\r\n                        else if (keyList.includes(post.key)) {\r\n                            post.visible = true;\r\n                            //console.log(post);\r\n                        }\r\n                        else\r\n                            post.visible = false;\r\n                    }\r\n                )\r\n            }\r\n            )\r\n            this.setState({ updated: !this.state.updated });\r\n        }\r\n\r\n    }\r\n\r\n    setTextSearchState = () => {\r\n        this.setState({\r\n            textSearch: true\r\n        });\r\n    }\r\n\r\n    resetTextSearchState = () => {\r\n        this.setState({\r\n            textSearch: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <InstantSearch indexName={this.state.company} searchClient={searchClient}>\r\n                    <Navbar updateForumDisp={this.updateTagSearch} setTextSearch={this.setTextSearchState}\r\n                        resetTextSearch={this.resetTextSearchState} />\r\n                    <PostContainer posts={this.state.posts} users={this.state.users} \r\n                        forumEmpty={this.state.forumEmpty} textSearch={this.state.textSearch} />\r\n                </InstantSearch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//component for the post container\r\nfunction PostContainer(props) {\r\n    if (props.textSearch) {\r\n        return (\r\n            <Results props={props}>\r\n                <Hits className=\"posts-container\" hitComponent={({ hit }) => <TextSearchPosts hit={hit} users={props.users} />} />\r\n            </Results>);\r\n    }\r\n    else {\r\n        return <TagSearchPosts posts={props.posts} users={props.users} forumEmpty={props.forumEmpty}/>;\r\n    }\r\n}\r\n\r\n//component for tag searching\r\nfunction TagSearchPosts(props) {\r\n    const getName = (userid) => {\r\n        let name = \"Deleted User\";\r\n        if (props.users !== undefined && props.users[userid] !== undefined) {\r\n            name = props.users[userid].firstName + \" \" + props.users[userid].lastName;\r\n\r\n        }\r\n        return name;\r\n    }\r\n    if(props.forumEmpty){\r\n        return <div className=\"posts-container\">\r\n            <div className=\"no-results-msg\">\r\n            <p>Welcome to the company's KIWI forum! Please start by creating a post.</p>\r\n            <RedirectButton props={props}/>\r\n            </div>\r\n        </div>\r\n    }\r\n    else { \r\n        return (\r\n            <div className=\"posts-container\">\r\n                {props.posts.map((item, i) => {\r\n                    if (item.visible)\r\n                        return <PostCards key={i} post_id={item.key} user_id={item.user_id} title={item.title}\r\n                            tag_ids={item.tag_ids} date_time={item.date_time} karma={item.karma}\r\n                            content={item.content} responses={item.responses} name={getName(item.user_id)} />\r\n\r\n                    else return <div key={i}></div>;\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//component for text searching\r\nfunction TextSearchPosts({ hit, users }) {\r\n    const getName = (userid) => {\r\n        let name = \"no_user\";\r\n        if (users !== undefined && users[userid] !== undefined) {\r\n            name = users[userid].firstName + \" \" + users[userid].lastName;\r\n\r\n        }\r\n        return name;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PostCards post_id={hit.objectID} user_id={hit.user_id} title={hit.title}\r\n                tag_ids={hit.tag_ids} date_time={hit.date_time} karma={hit.karma}\r\n                content={hit.content} responses={hit.responses} name={getName(hit.user_id)} />\r\n        </div >\r\n    );\r\n}\r\n\r\nconst RedirectButton = withRouter((props) => {\r\n    const redirect = () => {\r\n        props.history.push('/createPost');\r\n    }\r\n    return <button className=\"create-post-button\" onClick={redirect}>Create Post</button>\r\n})\r\n\r\n//component is displayed then there are no results from algolia\r\nconst Results = connectStateResults(\r\n    ({ searchState, searchResults, children }, props) =>\r\n        searchResults && searchResults.nbHits !== 0 ? (\r\n            children) : (\r\n                <div className=\"posts-container\">\r\n                    <div className=\"no-results-msg\"><p>No results have been found for \"{searchState.query}\"</p> <br />\r\n                        <RedirectButton props={props} />\r\n                    </div>\r\n                </div>)\r\n);\r\n\r\nexport default HomePosts;\r\n","import React, { useContext } from 'react';\r\nimport '../css/App.css';\r\nimport HomePosts from '../components/HomePosts'\r\n\r\n// Sorry we don't have a home for this function yet.\r\n/*\r\nasync function sendEmail(targetEmail, targetContent) {\r\n\tlet API_URL = \"https://kiwi-test-app.herokuapp.com\";\r\n\tlet EMAIL_ROUTE = \"/inviteUser\";\r\n\tconsole.log(targetEmail)\r\n\tconsole.log(targetContent)\r\n\tconst bodyContent = {\r\n\t\t\"email\": targetEmail,\r\n\t\t\"content\": targetContent,\r\n\t}\r\n\tconsole.log(bodyContent)\r\n\tconsole.log(JSON.stringify(bodyContent))\r\n    const response = await fetch(API_URL + EMAIL_ROUTE, {\r\n\tmethod: 'POST',\r\n\theaders: {\r\n\t  Accept: 'application/json',\r\n\t  'Content-Type': 'application/json',\r\n\t},\r\n\tbody: JSON.stringify(bodyContent)\r\n  });\r\n  console.log(response)\r\n}\r\n*/\r\n\r\n\r\nconst Home = ({ history }) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<HomePosts />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst AuthContext = React.createContext();\r\nconst UpdateContext = React.createContext();\r\nconst cookie = new Cookies();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(false);\r\n    const [isLoaded, setLoaded] = useState(false);\r\n    axios.defaults.withCredentials = true;\r\n\r\n    let updateAuth = function () {\r\n        return axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/auth/checkIfSignedIn',\r\n            withCredentials: true\r\n        }).then((result) => {\r\n            if (result.data.success) {\r\n                setCurrentUser(true);\r\n            } else {\r\n                setCurrentUser(false);\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            setCurrentUser(false);\r\n        }).then(() => {\r\n            setLoaded(true);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateAuth();\r\n        cookie.addChangeListener((name, value, options) => {\r\n            if (name === 'auth' && value != null && options != null) {\r\n                updateAuth();\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    if (!isLoaded) {\r\n        return <h1>Loading...</h1>\r\n    }\r\n\r\n    return (\r\n        <UpdateContext.Provider value={updateAuth}>\r\n            <AuthContext.Provider value={{ currentUser }}>\r\n                {children}\r\n            </AuthContext.Provider>\r\n        </UpdateContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport { AuthContext, AuthProvider, UpdateContext }\r\n","import React, { useCallBack, useContext } from \"react\";\r\nimport \"../css/signup.css\";\r\nimport axios from 'axios';\r\nimport pic from '../css/vectorlogo.png';\r\nimport Cookies from 'universal-cookie';\r\nimport db from '../auth/firebase';\r\nimport { AuthContext } from \"../auth/Auth\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\nclass SignUp extends React.Component {\r\n\tstate = {\r\n\t\tisLoading: true,\r\n\t}\r\n\r\n\thandleSignUp = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst {first_name, last_name, email, password} = event.target.elements;\r\n\r\n\t\taxios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: 'https://kiwi-test-app.herokuapp.com/auth/EmployeeSignUp',\r\n\t\t\tdata: {\r\n\t\t\t\tfirst_name: first_name.value,\r\n\t\t\t\tlast_name: last_name.value,\r\n\t\t\t\temail: email.value,\r\n\t\t\t\tpassword: password.value,\r\n\t\t\t\tregistration_ID: this.props.match.params.id\r\n\t\t\t}\r\n\t\t}).then((response) => {\r\n\t\t\tif (response.data.success) {\r\n\t\t\t\tdb.auth().signInWithEmailAndPassword(email.value, password.value).then(() => {\r\n\t\t\t\t\tconsole.log(\"Entered sign in\");\r\n\t\t\t\t\t// create token for user\r\n\t\t\t\t\tdb.auth().currentUser.getIdToken(true).then((idToken) => {\r\n\t\t\t\t\t\t// store token into cookie \r\n\t\t\t\t\t\tconst cookies = new Cookies();\r\n\t\t\t\t\t\tcookies.set('auth', idToken, {path: '/'});\r\n\t\t\t\t\t\tconsole.log(\"Entered create token\");\r\n\t\t\t\t\t\t// redirect to home page\r\n\t\t\t\t\t\tsetTimeout(()=>{this.props.history.push(\"/\")}, 3000);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => console.log(error));\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// update gui to show error in signing up\r\n\t\t\t\talert(\"error in sign up, most likely the email is already being used.\");\r\n\t\t\t}\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n\t}\r\n\r\n\tredirectLogin = () => {\r\n\t\tthis.props.history.push(\"/login\");\r\n\t};\r\n\r\n\tredirectSpecializations = () => {\r\n\t\tthis.props.history.push(\"/\");\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t// check to see if data is valid \r\n\t\taxios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: 'https://kiwi-test-app.herokuapp.com/inviteUser/validateID',\r\n\t\t\tdata: {\r\n\t\t\t\tuuid: this.props.match.params.id\r\n\t\t\t}\r\n\t\t  })\r\n\t\t  .then((response) => {\r\n\t\t\tif (response.data.success) {\r\n\t\t\t\tthis.setState({isLoading: false});\r\n\t\t\t} else {\r\n\t\t\t\talert(\"Invalid RegistrationID\");\r\n\t\t\t\tthis.props.history.push(\"/login\");\r\n\t\t\t}\r\n\t\t  })\r\n\t\t  .catch((error) => {\r\n\t\t\tconsole.log(error);\r\n\t\t  });\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <h1> Loading... </h1>\r\n\t\t}\r\n\r\n        return (\r\n            <div className=\"signup\">\r\n                <div className=\"signupRow\">\r\n                    <div className=\"left\">\r\n                        <div className=\"picture\">\r\n                            <img className=\"picture\" src={pic} />\r\n                        </div>\r\n                        <div className=\"leftText\">\r\n                            <p1>Our company will ensure the success and coordination of all co-workers.\r\n                            Each company has their own unique tags. Where each employee can also be uniquely\r\n                            identified <br /> <br />Please Signup on the right in order to get started <br /> <br />\r\n                                <br /> <br /> Thank you for choosing KIWI.\r\n                        </p1>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className=\"right\">\r\n                        <div className=\"rightTitle\">\r\n                            <h1>Sign Up</h1>\r\n                        </div>\r\n    \r\n                        <form onSubmit={this.handleSignUp.bind(this)}>\r\n                            <div>\r\n                                <input className=\"inputBox\" name=\"first_name\" type=\"first_name\" placeholder=\"  First Name\" />\r\n                            </div>\r\n                            <div>\r\n                                <input className=\"inputBox\" name=\"last_name\" type=\"last_name\" placeholder=\"  Last Name\" />\r\n                            </div>\r\n                            <div>\r\n                                <input className=\"inputBox\" name=\"email\" type=\"email\" placeholder=\"  Email\" />\r\n                            </div>\r\n                            <div>\r\n                                <input className=\"inputBox\" name=\"password\" type=\"password\" placeholder=\"  Password\" />\r\n                            </div>\r\n                            <div>\r\n                                <input className=\"inputBox\" name=\"password2\" type=\"password\" placeholder=\"  Re-Enter Password\" />\r\n                            </div>\r\n                            <div className=\"inputBox\">\r\n                                <button className=\"button12\" type=\"submit\">Sign Up</button>\r\n                                <button className=\"button22\" onClick={this.redirectLogin.bind(this)}> Back to Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"endText\">\r\n                    <p1>\r\n                        © All Rights Reserved. KIWI by Symps.\r\n                </p1>\r\n                </div>\r\n            </div >\r\n        );\r\n\t}\r\n\r\n};\r\n\r\nexport default SignUp;","import React, { useCallBack } from \"react\";\r\nimport \"../css/adminsignup.css\";\r\nimport axios from 'axios';\r\nimport pic from '../css/vectorlogo.png';\r\n\r\n\r\nconst AdminSignUp = ({ history }) => {\r\n\r\n    const handleSignUp = (event) => {\r\n        event.preventDefault();\r\n        const { company, first_name, last_name, email, password, passwordcopy } = event.target.elements;\r\n\r\n        if(password.value != passwordcopy.value) {\r\n            alert('Please make sure the passwords match.');\r\n            return;\r\n        }\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://kiwi-test-app.herokuapp.com/auth/AdminSignUp',\r\n            data: {\r\n                company: company.value,\r\n                first_name: first_name.value,\r\n                last_name: last_name.value,\r\n                email: email.value,\r\n                password: password.value,\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                alert(\"Company Forum successfully made! Welcome to KIWI.\")\r\n                redirectLogin();\r\n            } else {\r\n                // update gui to show error in signing up\r\n                console.log(\"error in sign up, most likely account has already been made\");\r\n                alert(\"Invalid company/email/password. Company or email may already be in use and password must be at least 6 characters.\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const redirectLogin = () => {\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"signup\">\r\n            <div className=\"signupRow\">\r\n                <div className=\"left\">\r\n                    <div className=\"picture\">\r\n                        <img className=\"picture\" src={pic} />\r\n                    </div>\r\n                    <div className=\"leftText\">\r\n                        <p1>Our company will ensure the success and coordination of all co-workers.\r\n                        Each company has their own unique tags. Where each employee can also be uniquely\r\n                        identified <br /> <br />Please Signup on the right in order to get started <br /> <br />\r\n                            <br /> <br /> Thank you for choosing KIWI.\r\n                    </p1>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"right\">\r\n                    <div className=\"rightTitle\">\r\n                        <h1>Admin Sign Up</h1>\r\n                    </div>\r\n\r\n                    <form onSubmit={handleSignUp}>\r\n                        <div>\r\n                            <input className=\"inputBox\" name=\"company\" type=\"company\" placeholder=\"  Company\" />\r\n                        </div>\r\n                        <div>\r\n                            <input className=\"inputBox\" name=\"first_name\" type=\"first_name\" placeholder=\"  First Name\" />\r\n                        </div>\r\n                        <div>\r\n                            <input className=\"inputBox\" name=\"last_name\" type=\"last_name\" placeholder=\"  Last Name\" />\r\n                        </div>\r\n                        <div>\r\n                            <input className=\"inputBox\" name=\"email\" type=\"email\" placeholder=\"  Email\" />\r\n                        </div>\r\n                        <div>\r\n                            <input className=\"inputBox\" name=\"password\" type=\"password\" placeholder=\"  Password\" />\r\n                        </div>\r\n                        <div>\r\n                            <input className=\"inputBox\" name=\"passwordcopy\" type=\"password\" placeholder=\"  Re-Enter Password\" />\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <button className=\"button12\" type=\"submit\">Sign Up</button>\r\n                            <button className=\"button22\" onClick={redirectLogin}> Back to Login</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"endText\">\r\n                <p1>\r\n                    © All Rights Reserved. KIWI by Symps.\r\n            </p1>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default AdminSignUp;","import React, {useContext} from \"react\";\r\nimport '../css/login.css';\r\nimport Cookies from 'universal-cookie';\r\nimport { UpdateContext } from \"../auth/Auth\";\r\nimport db from '../auth/firebase';\r\nimport '../css/App.css';\r\nimport pic from '../css/vectorlogo.png';\r\nimport axios from 'axios';\r\n\r\nconst Login = ({history}) => {\r\n    let update = useContext(UpdateContext);\r\n\r\n    const handleLogin = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { email, password } = event.target.elements;\r\n\r\n\r\n\t\t// sign in user\r\n\t\tdb.auth().signInWithEmailAndPassword(email.value, password.value).then(() => {\r\n\r\n\t\t\t// create token for user\r\n\t\t\tdb.auth().currentUser.getIdToken(true).then((idToken) => {\r\n\t\t\t\t// store token into cookie \r\n\t\t\t\tconst cookies = new Cookies();\r\n                cookies.set('auth', idToken, {path: '/'});\r\n                \r\n\t\t\t\t\r\n\t\t\t\t// redirect to home page\r\n\t\t\t\tupdate().then(() => {\r\n\t\t\t\t\thistory.push('/');\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t\t.catch((error) => console.log(error));\r\n\r\n\t\t}).catch((error) => {\r\n            console.log(error);\r\n            alert('Invalid Credentials');\r\n\t\t});\r\n\t}\r\n\r\n        \r\n    const redirectToAdminSignUp = () => {\r\n        history.push('/adminsignup');\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"login\">\r\n        <div className=\"inside\">\r\n            \r\n            <div className=\"columnx\">\r\n                <img className=\"pic\" src={pic}/>\r\n                <h1 className='font'>Login</h1>\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"textField\">\r\n                        <input className=\"textBox\" name=\"email\" type=\"email\" placeholder=\"  Email\" />\r\n                    </div>\r\n                    <div className=\"textField\">\r\n                        <input className=\"textBox\" name=\"password\" type=\"password\" placeholder=\"  Password\" />\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button className=\"button1\" type=\"submit\">Log In</button>\r\n                        <button className=\"button2\" type=\"button\" onClick={redirectToAdminSignUp}>Sign Up</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        </div>\r\n        <div className=\"endText\">\r\n            <p>\r\n                © All Rights Reserved. KIWI by Symps.\r\n            </p>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, {useContext} from \"react\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\"\r\n\r\nconst PrivateRoute = ({component: RouteComponent, dynamic: isDynamic, ...rest}) => {\r\n    const {currentUser} = useContext(AuthContext);\r\n    if (!isDynamic) {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={(routeProps) => (currentUser ? (<RouteComponent {...routeProps} />) : (<Redirect to=\"/login\"/>))\r\n                }\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <Route\r\n            {...rest}\r\n            render={({match}, routeProps) => {\r\n                return (currentUser ? (<RouteComponent {...routeProps} id={match.params.id}  />) : (<Redirect to=\"/login\"/>))\r\n            }}\r\n        />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport logo from '../images/logo_white.png';\r\nimport firebase from '../auth/firebase';\r\nimport Cookies from 'universal-cookie';\r\nimport '../css/TitleBar.css';\r\n\r\n\r\nclass TitleBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.title\r\n        }\r\n    }\r\n\r\n    handleSignOut = () => {\r\n        firebase.auth().signOut();\r\n\r\n        // removing cookie\r\n        const cookies = new Cookies();\r\n        cookies.remove('auth');\r\n\r\n        // redirect to home page\r\n        // this.props.history.push(\"/login\");\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"title_block\">\r\n                <div className={\"kiwiLogo\"}>\r\n                    <Link to={\"/\"}>\r\n                        <button className={\"invisibleButton\"}>\r\n                            <img src={logo} height={'40px'} alt={\"KIWI\"} />\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className={\"vert-line\"}>\r\n                    <p>|</p>\r\n                </div>\r\n\r\n                <div className={\"title-text\"}>\r\n                    <p>{this.state.title}</p>\r\n                </div>\r\n\r\n                <div className={\"settings\"}>\r\n                    <Link to={'/settings'}>\r\n                        <Icon link name=\"settings\" size={\"big\"} color='grey' inverted />\r\n                    </Link>\r\n                </div>\r\n                <div className={\"logoutButton\"}>\r\n                    <Link to=\"/login\">\r\n                        <button className={\"invisibleButton\"} onClick={this.handleSignOut}><Icon link name=\"sign out\" size={\"big\"} color='grey' inverted /></button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TitleBar;","import React, { useCallBack } from \"react\";\r\nimport { Segment, Divider, Checkbox } from \"semantic-ui-react\";\r\nimport TitleBar from \"../components/TitleBar\"\r\nimport \"../css/settings.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\n\r\nclass Settings extends React.Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user_email: \"\",\r\n            admin: false\r\n        };\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/users/getUserEmail'\r\n          }).then((response) => {\r\n            this.setState({user_email: response.data.userEmail});\r\n            console.log(response)\r\n        });\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/users/isUserAdmin'\r\n          }).then((response) => {\r\n              console.log(response);\r\n            this.setState({admin: response.data.admin});\r\n        });\r\n    }\r\n\r\n    handleResetPassword = (event) =>{\r\n            event.preventDefault();\r\n            // should tag_ids be in line below\r\n            const {password, confirmPassword} = event.target.elements;\r\n\r\n            if(password.value != confirmPassword.value) {\r\n                alert('Please Make Sure the Passwords Match');\r\n                return;\r\n            }\r\n\r\n            if(window.confirm(\"Confirm Reset Password?\"))\r\n            {\r\n                axios({\r\n                    method: 'post',\r\n                    url: 'https://kiwi-test-app.herokuapp.com/auth/resetPassword',\r\n                    data: { \r\n                        newPassword:  password.value\r\n                    }\r\n                }).then(() => {\r\n                    alert(\"Password Changed\");\r\n                });\r\n            }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.admin){\r\n\r\n            return(\r\n                <div>\r\n                    <TitleBar title=\"Settings\" />\r\n                    <div className = \"setting\">            \r\n                        <div className = \"settingsWrap\">\r\n                            <Segment basic textAlign='center'>\r\n                                <div className = \"settings-item\" style={{paddingLeft:\"10px\"}}>                \r\n                                    Email:     <b>{this.state.user_email}</b>\r\n                                </div>\r\n                                <form onSubmit={this.handleResetPassword.bind(this)}> \r\n                                    <div className = \"settings-item\">                         \r\n                                        <input className=\"textBox\" name=\"password\" type=\"password\" placeholder=\"  New Password\"/>\r\n                                    </div>\r\n                                    <div className = \"settings-item\">                         \r\n                                        <input className=\"textBox\" name=\"confirmPassword\" type=\"password\" placeholder=\"  Confirm Password\"/>\r\n                                    </div>\r\n                                    <div className = \"settings-item\">\r\n                                        <button className= \"buttonz\"> Submit </button>\r\n                                    </div>\r\n                                </form>\r\n                                \r\n                                <div className=\"instructions\">Click below to modify specializations.</div>\r\n\r\n                                <div className = \"settings-item\">  \r\n                                    <Link to='/userTags'>\r\n                                        <button className= \"buttonz\">  Specializations</button>\r\n                                    </Link>     \r\n                                </div>\r\n\r\n                                <Divider horizontal> Admins Only </Divider>\r\n\r\n                                <div className = \"settings-item\"> \r\n                                    <Link to=\"/adminPage\">\r\n                                        <button className= \"buttonz\" onClick={this.redirectAdmin}> Manage Forum </button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Segment>\r\n                        </div>\r\n                        <div className=\"endText\">\r\n                            <p1>\r\n                                © All Rights Reserved. KIWI by Symps.\r\n                            </p1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return(\r\n            <div>\r\n                <TitleBar title=\"Settings\" />\r\n                <div className = \"setting\">            \r\n                    <div className = \"settingsWrap\">\r\n                        <Segment basic textAlign='center'>\r\n                            <div className = \"settings-item\" style={{paddingLeft:\"10px\"}}>                \r\n                                    Email:     <b>{this.state.user_email}</b>\r\n                            </div>\r\n                            <form onSubmit={this.handleResetPassword.bind(this)}> \r\n                                <div className = \"settings-item\">                         \r\n                                    <input className=\"textBox\" name=\"password\" type=\"password\" placeholder=\"  New Password\"/>\r\n                                </div>\r\n                                <div className = \"settings-item\">                         \r\n                                    <input className=\"textBox\" name=\"confirmPassword\" type=\"password\" placeholder=\"  Confirm Password\"/>\r\n                                </div>\r\n                                <div className = \"settings-item\">\r\n                                    <button className= \"buttonz\"> Submit </button>\r\n                                </div>\r\n                            </form>\r\n                            \r\n                            <div className=\"instructions\">Click below to modify specializations.</div>\r\n\r\n                            <div className = \"settings-item\">  \r\n                                <Link to='/userTags'>\r\n                                    <button className= \"buttonz\">  Specializations</button>\r\n                                </Link>     \r\n                            </div>\r\n                        </Segment>\r\n                        </div>\r\n                        <div className=\"endText\">\r\n                            <p1>\r\n                                © All Rights Reserved. KIWI by Symps.\r\n                            </p1>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n        }\r\n    }\r\n};\r\n\r\nexport default Settings;","import React from \"react\";\r\n//import users from '../dummy_data/dummy_users.json'\r\nimport \"../css/DisplayUser.css\"\r\nimport { Icon } from \"semantic-ui-react\"\r\nimport axios from 'axios';\r\n\r\nclass DisplayUser extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            removed: false,\r\n            user_id: props.user_id,\r\n            first_name: props.first_name,\r\n            last_name: props.last_name,\r\n            email: props.email,\r\n            admin: props.admin,\r\n            checkemail: '',\r\n        };\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/users/getUserEmail',\r\n          }).then((response) => {\r\n            this.setState({checkemail: response.data.userEmail});\r\n            console.log(response.data);\r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        var pending = (this.state.user_id == null) ? true : false;\r\n        \r\n        const handleAdmin = () => {\r\n            if(this.state.checkemail == this.state.email) {\r\n                alert('Can\\'t Un-admin Yourself');\r\n                return;\r\n            }\r\n            axios({\r\n                method: 'post',\r\n                url: 'https://kiwi-test-app.herokuapp.com/users/toggleAdmin',\r\n                data: {\r\n                  userID: this.state.user_id\r\n                }\r\n              }).then((response) => {\r\n                this.setState({admin: !this.state.admin});\r\n            });\r\n        }\r\n\r\n        const handleRemove = () => {\r\n            if(this.state.checkemail == this.state.email) {\r\n                alert('Can\\'t Delete Yourself');\r\n                return;\r\n            }\r\n            if(window.confirm(\"Removing\" + \" \" + this.state.first_name + \" \" + this.state.last_name))\r\n            {\r\n                axios({\r\n                    method: 'post',\r\n                    url: 'https://kiwi-test-app.herokuapp.com/users/remove',\r\n                    data: {\r\n                    userID: this.state.user_id\r\n                    }\r\n                }).then((response) => {\r\n                    this.setState({removed: true});\r\n                });\r\n            }\r\n        }\r\n\r\n        if(this.state.removed){\r\n            return(\r\n            <div className=\"displayUserBarDU\"> \r\n                <div className=\"removed\"> removed </div>\r\n             </div>);\r\n        }\r\n        \r\n        else{\r\n            return(\r\n                <div className=\"displayUserBarDU\">\r\n                    <div className=\"first_nameDU\"> {this.state.first_name} </div>\r\n                    <div className=\"last_nameDU\"> {this.state.last_name} </div>\r\n                    <div className=\"emailDU\"> {this.state.email} </div>\r\n                    <div className=\"user_idDU\"> {this.state.user_id} </div>\r\n                    <div className=\"buttonsDU\">\r\n                        <button onClick={handleAdmin}> \r\n                            {this.state.admin ? \r\n                            <Icon fitted color=\"yellow\" name=\"star\"/> : \r\n                            <Icon fitted color=\"yellow\" name=\"star outline\"/>}\r\n                        </button>\r\n                    <button onClick={handleRemove}> X </button> \r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default DisplayUser;","import DisplayUser from \"../components/DisplayUser\"\r\nimport { Tab, Icon } from 'semantic-ui-react'\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass UserTab extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading_user: true,\r\n            userList: [\"loading\"],\r\n            users: {\"loading\": true}\r\n        };  \r\n    }\r\n\r\n    componentWillMount(){\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/users/all'\r\n          }).then((response) => {\r\n              this.setState({users: response.data})\r\n            this.setState({userList: Object.keys(response.data),\r\n            loading_user: false});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const handleAddEmployee = (event) => {\r\n            event.preventDefault();\r\n            // should tag_ids be in line below\r\n            const {email} = event.target.elements;\r\n            if(window.confirm(\"Adding employee with email:  \" + email.value))\r\n            {\r\n                axios({\r\n                    method: 'post',\r\n                    url: 'https://kiwi-test-app.herokuapp.com/inviteUser/',\r\n                    data: {\r\n                        email: email.value\r\n                    }\r\n                })\r\n            }\r\n            event.target.reset();\r\n        }\r\n        \r\n        return( <Tab.Pane className=\"adminPageAP\"> \r\n                        <h1 style={{textAlign: \"center\"}}> Add and Remove Employees </h1>\r\n\r\n                <div className=\"tagUserListAP\"> \r\n                    {this.state.loading_user ? \r\n                    <div> \r\n                        <Icon loading name='spinner' /> loading...\r\n                    </div> : \r\n                    <div className=\"ListOfUsers\">\r\n                        {this.state.userList.map(x => {\r\n                                return(\r\n                                    <DisplayUser user_id={x} \r\n                                    first_name={this.state.users[x][\"firstName\"]} \r\n                                    last_name={this.state.users[x][\"lastName\"]}\r\n                                    email={this.state.users[x][\"email\"]} \r\n                                    admin={this.state.users[x][\"admin\"]}/> );\r\n                            })}\r\n                    </div>}\r\n                    <div>\r\n                        <div className=\"addEmployeeAP\"> \r\n                            <div className=\"invitePromptAP\">Add Employee Email </div>\r\n                            <form className=\"TagForm\" onSubmit={handleAddEmployee.bind(this)}>\r\n                                <input className=\"inputBoxAP\" name=\"email\" type=\"email\" placeholder=\"  email\" />\r\n                                <button> + </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </Tab.Pane>);\r\n    }\r\n}\r\n\r\n\r\nexport default UserTab;","import { Tab, Icon } from 'semantic-ui-react'\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass MetadataTagTab extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            tagList: {},\r\n            loading: true\r\n        };  \r\n    }\r\n\r\n    componentWillMount(){\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/metadata/getTagMetadata'\r\n          }).then((response) => {\r\n            console.log(response)\r\n            if(response.data.success == null) {\r\n              this.setState({tagList:response.data, loading:false});\r\n            } else if(!response.data.success) {\r\n              this.setState({tagList:{'No Metadata Recorded': 'Requires Posts to Record Data'}, loading:false});\r\n            } else {\r\n              this.setState({tagList:{'No Metadata Recorded': 'Requires Posts to Record Data'}, loading:false});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const {tagList} = this.state;\r\n\r\n        return (\r\n            <Tab.Pane className=\"adminPageAP\" >\r\n                <h1 style={{textAlign: \"center\"}}> Tag Meta Data (Occurences of Tags in Posts) </h1>\r\n                <div className=\"tagListAP\">  \r\n                    {this.state.loading ? \r\n                    <div> \r\n                        <Icon loading name='spinner' /> loading \r\n                    </div> \r\n                    : \r\n                    Object.keys(tagList).map((key) => {return <div className=\"MTTbar\"> {key}  : {this.state.tagList[key]} </div>})}\r\n                    \r\n                </div> \r\n            </Tab.Pane> \r\n        );\r\n    }\r\n}\r\n\r\nexport default MetadataTagTab;","import { Tab, Icon } from 'semantic-ui-react'\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass MetadataUserTab extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            userList: {},\r\n            loading: true,\r\n        };  \r\n    }\r\n\r\n    componentWillMount(){\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/metadata/getUserMetadata'\r\n          }).then((response) => {\r\n              console.log(response)\r\n              if(response.data.success == null) {\r\n                this.setState({userList:response.data, loading:false});\r\n              } else if(!response.data.success) {\r\n                this.setState({userList:{'No Metadata Recorded': 'Requires Posts to Record Data'}, loading:false});\r\n              } else {\r\n                this.setState({userList:{'No Metadata Recorded': 'Requires Posts to Record Data'}, loading:false});\r\n              }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const {userList} = this.state;\r\n\r\n        return (\r\n            <Tab.Pane className=\"adminPageAP\" >\r\n                <h1 style={{textAlign: \"center\"}}> User Meta Data (Frequency of Post by Users) </h1>\r\n                <div className=\"tagListAP\">  \r\n                    {this.state.loading ? \r\n                    <div> \r\n                        <Icon loading name='spinner' /> loading \r\n                    </div> \r\n                    : \r\n                    Object.keys(userList).map((key) => {return <div className=\"MUTbar\"> {key} :  {this.state.userList[key]} </div>})}\r\n                    \r\n                </div> \r\n            </Tab.Pane> \r\n        );\r\n    }\r\n}\r\n\r\nexport default MetadataUserTab;","import React from \"react\";\r\nimport \"../css/DisplayTags.css\"\r\nimport axios from 'axios';\r\n\r\nclass DisplayTag extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            removed: false,\r\n            tag_id: this.props.tag_id\r\n        };\r\n    }\r\n\r\n    render(){\r\n        const handleRemove = () => {\r\n            if(window.confirm(\"Removing\" + \" \" + this.state.tag_id))\r\n            {\r\n                axios({\r\n                    method: 'post',\r\n                    url: 'https://kiwi-test-app.herokuapp.com/tags/remove',\r\n                    data: {\r\n                        tagName: this.state.tag_id\r\n                    }\r\n                }).then((response) => {\r\n                    this.setState({removed: true});\r\n                });\r\n            }\r\n        }\r\n\r\n        if(this.state.removed)\r\n        {\r\n            return (\r\n                <div className=\"tagButtonDT\">\r\n                    <div className=\"removed\"> removed </div>\r\n                </div>);\r\n        }\r\n        return(\r\n            <div>\r\n                <button onClick={handleRemove} className=\"tagButtonDT\"> {this.state.tag_id} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; x</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DisplayTag;","import DisplayTag from \"../components/DisplayTag\"\r\nimport { Tab, Icon } from 'semantic-ui-react'\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass TagTab extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading_tag: true,\r\n            tagList: [\"loading\"],\r\n            currTag: ''\r\n        };  \r\n    }\r\n\r\n    componentWillMount(){\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/tags/getTags'\r\n          }).then((response) => {\r\n            this.setState({tagList: Object.keys(response.data.tags),\r\n            loading_tag: false});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const handleAddTag = (event) =>{\r\n            event.preventDefault();\r\n            // should tag_ids be in line below\r\n            const {tagname} = event.target.elements;\r\n            this.setState({currTag: tagname.value});\r\n            if(window.confirm(\"Adding specialization:  \" + tagname.value))\r\n            {\r\n                axios({\r\n                    method: 'post',\r\n                    url: 'https://kiwi-test-app.herokuapp.com/tags/add',\r\n                    data: {\r\n                    tagName: tagname.value\r\n                    }\r\n                }).then(() => {\r\n                    this.state.tagList.push(this.state.currTag);\r\n                    this.setState({tagList: this.state.tagList})\r\n                });\r\n            }\r\n            event.target.reset();\r\n        }\r\n\r\n        return(\r\n            <Tab.Pane className=\"adminPageAP\" >\r\n                <h1 style={{textAlign: \"center\"}}> Add and Remove Specializations </h1>\r\n                <div className=\"tagListAP\"> \r\n                    {this.state.loading_tag ? \r\n                    <div> \r\n                        <Icon loading name='spinner' /> loading \r\n                    </div> \r\n                    : \r\n                    this.state.tagList.map(x => {return<div> <DisplayTag tag_id={x}/> </div>;})}\r\n                </div> \r\n                <div className=\"addTagAP\"> \r\n                    <div className=\"tagPromptAP\">Add tag name </div>\r\n                    <form className=\"TagForm\" onSubmit={handleAddTag.bind(this)}>\r\n                        <input className=\"inputBoxAP\" name=\"tagname\" type=\"tagname\" placeholder=\"  tag name\" />\r\n                        <button> + </button>\r\n                    </form>\r\n                </div>\r\n            </Tab.Pane> );\r\n    }\r\n}\r\n\r\nexport default TagTab;","import React from \"react\";\r\nimport \"../css/AdminPage.css\"\r\nimport TitleBar from \"../components/TitleBar\";\r\nimport UserTab from \"../components/UserTab\";\r\nimport MetadataTagTab from \"../components/MetadataTagTab\";\r\nimport MetadataUserTab from \"../components/MetadataUserTab\";\r\nimport TagTab from \"../components/TagTab\";\r\nimport { Tab } from 'semantic-ui-react'\r\n\r\n\r\nclass AdminPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        var panes = [\r\n            { menuItem: 'Users', render: () => <UserTab />},\r\n            { menuItem: 'Tags', render: () => <TagTab />},\r\n            { menuItem: 'Metadata - Tags', render: () => <MetadataTagTab  />},\r\n            { menuItem: 'Metadata - Users', render: () => <MetadataUserTab />}\r\n        ];\r\n\r\n        return(\r\n            <div>\r\n                <TitleBar title=\"Manage Forum\" />\r\n                <Tab panes={panes} />\r\n                <div className=\"endText\">                   \r\n                    <p1>\r\n                        © All Rights Reserved. KIWI by Symps.\r\n                    </p1>\r\n                </div>\r\n            </div>);\r\n    }\r\n\r\n}\r\n\r\nexport default AdminPage;","import React from \"react\";\r\nimport \"../css/usertags.css\"\r\nimport axios from 'axios';\r\n\r\nclass SpecializationButton extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        // takes in what tag we print and a list of user info and the class \r\n        this.state = {\r\n            thisTag: this.props.tag,\r\n            user_info: this.props.user_tags,\r\n            tagButton: 'tagButton'\r\n        };\r\n\r\n        this.checkSpecialization();\r\n    }\r\n\r\n\r\n\r\n    // adds a specialization\r\n    addSpecialization = (thisTag) => {\r\n        // this tag is what we are removing\r\n        var currTag = thisTag;\r\n        if (this.state.user_info == '' ) {\r\n            var newJSON = {};\r\n        } else {\r\n            var newJSON = this.state.user_info;\r\n        }\r\n        axios.defaults.withCredentials = true;\r\n        axios({\r\n\t\t\tmethod: 'post',\r\n            url: 'https://kiwi-test-app.herokuapp.com/users/addSpecialization',\r\n            data: {\r\n                tag: currTag\r\n            },\r\n            withCredentials: true\r\n          })\r\n          // print statements\r\n          .then((response) => {\r\n\t\t\tif (response.data.success) {\r\n                // Wait until update processes before redirecting\r\n                console.log(\"successfully added\");\r\n\r\n                newJSON[thisTag] = thisTag;\r\n                this.setState({user_info: newJSON});\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Tag was not added\");\r\n            }\r\n\t\t  })\r\n\t\t  .catch((error) => {\r\n\t\t\tconsole.log(error);\r\n          });\r\n    }\r\n\r\n\r\n    // removes a specialization from a user\r\n    removeSpecialization = (thisTag) => {\r\n        // this tag is what we are removing\r\n        var currTag = thisTag;\r\n        if (this.state.user_info == '' ) {\r\n            var newJSON = {};\r\n        } else {\r\n            var newJSON = this.state.user_info;\r\n        }\r\n        axios.defaults.withCredentials = true;\r\n        axios({\r\n\t\t\tmethod: 'post',\r\n            url: 'https://kiwi-test-app.herokuapp.com/users/removeSpecialization',\r\n            data: {\r\n                tag: currTag\r\n            },\r\n            withCredentials: true\r\n          })\r\n          // gets the response and prints console.\r\n          .then((response) => {\r\n\t\t\tif (response.data.success) {\r\n                // Wait until update processes before redirecting\r\n                console.log(\"Tag was successfully removed!\");\r\n                delete newJSON[thisTag];\r\n\r\n                this.setState({user_info: newJSON});\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Tag was not added\");\r\n            }\r\n\t\t  })\r\n\t\t  .catch((error) => {\r\n\t\t\tconsole.log(error);\r\n          });\r\n    }\r\n    \r\n\r\n    // This will check if its in the right state checked or unchecked\r\n    checkSpecialization() {\r\n        const {user_info} = this.state;\r\n        const {tagButton} = this.state;\r\n        const {thisTag} = this.state;\r\n\r\n        // if the user has the property then it displays it highlighted\r\n        if(user_info.hasOwnProperty(thisTag) && tagButton == 'tagButton') {\r\n            this.setState({tagButton: 'tagButton2'})\r\n        } // else if the user doesnt have that property and its the wrong highlighted version\r\n        else if (!user_info.hasOwnProperty(thisTag) && tagButton == 'tagButton2') {\r\n            this.setState({tagButton: 'tagButton'})\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const {user_info} = this.state;\r\n        const {tagButton} = this.state;\r\n        const {thisTag} = this.state;\r\n\r\n        this.checkSpecialization();\r\n\r\n        // method to change what is currently on page\r\n        const handleToggle = () => {\r\n            if(user_info.hasOwnProperty(thisTag)) {\r\n                this.removeSpecialization(thisTag);\r\n            }\r\n            else {\r\n                this.addSpecialization(thisTag);\r\n            }\r\n        }\r\n        \r\n        // just prints one button with the styling\r\n        return (\r\n            <button onClick={handleToggle} className={tagButton}>{thisTag}</button>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default SpecializationButton;","import React from 'react';\r\nimport \"../css/usertags.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport TitleBar from \"../components/TitleBar\"\r\nimport axios from 'axios';\r\nimport SpecializationButton from '../components/SpecializationButton';\r\n\r\n\r\n\r\nclass UserTags extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            info: {},\r\n            user_info: {},\r\n            isLoading: true\r\n        };\r\n\r\n\r\n        // gets the tag list of the company\r\n        axios.defaults.withCredentials = true;\r\n\t\taxios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: 'https://kiwi-test-app.herokuapp.com/tags/getTags',\r\n            withCredentials: true,\r\n\t\t  })\r\n\t\t  .then((response) => { \r\n\t\t\tif (response != undefined) { \r\n                this.setState({info: response.data.tags});   \r\n\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"error with tags.\");\r\n\t\t\t}\r\n\t\t  })\r\n\t\t  .catch((error) => {\r\n\t\t\tconsole.log(error);\r\n          });\r\n\r\n\r\n        axios.defaults.withCredentials = true;\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/users/userTags',\r\n            withCredentials: true,\r\n        })\r\n        .then((response) => { \r\n            // rechecks if the user has the tag \r\n            if (response != undefined) { \r\n                // updates user\r\n                this.setState({user_info: response.data});   \r\n                this.setState({isLoading: false});\r\n            } else {\r\n                console.log(\"error with tags.\");\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n          \r\n    }\r\n\r\n\r\n    // just refreshes the page with the tags removed\r\n    resetTags = (event) => {\r\n        event.preventDefault();\r\n        // should tag_ids be in line below\r\n        axios.defaults.withCredentials = true;\r\n        axios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: 'https://kiwi-test-app.herokuapp.com/users/removeAllUserTags',\r\n            withCredentials: true\r\n          })\r\n\r\n          .then((response) => {\r\n            window.location.reload(false);\r\n\t\t\tif (response.data.success) {\r\n                // Wait until update processes before redirecting\r\n                alert(\"Removed All Tags!\");\r\n                // Redirect to home page\r\n\t\t\t} else {\r\n\t\t\t\tconsole(\"um functional error?\");\r\n            }\r\n            \r\n\t\t  })\r\n\t\t  .catch((error) => {\r\n\t\t\tconsole.log(error);\r\n          });\r\n    }\r\n\r\n    \r\n    \r\n    render() {\r\n        const {info} = this.state;\r\n        const {user_info} = this.state;\r\n\r\n        return(\r\n            <div>\r\n            <TitleBar title=\"Specializations\"/>\r\n            <div className=\"mainTagsPage\">\r\n                <div className=\"mainContainer\"> \r\n                    <h1>\r\n                        Select Your Specializations\r\n                    </h1>\r\n                    <div className=\"tagListBox\">\r\n                        {this.state.isLoading ? \r\n                            <div> \r\n                                <Icon loading name='spinner' /> loading \r\n                            </div> \r\n                            : \r\n                            Object.keys(info).map((key, i) => ( <SpecializationButton user_tags={user_info} tag={key}/>))\r\n                        }\r\n                    </div>\r\n                    <div className=\"doneButtons\">\r\n                        <button onClick={this.resetTags} className=\"resetButton\">Clear Specializations</button>\r\n                        <Link to=\"/settings\">\r\n                            <button className=\"completeButton\">Back To Settings</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"endText\">\r\n                    <p1>\r\n                        © All Rights Reserved. KIWI by Symps.\r\n                    </p1>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n   \r\n\r\nexport default UserTags;","import React from 'react';\r\nimport { Label } from \"semantic-ui-react\";\r\n\r\n\r\nclass DisplayingTagsPost extends React.Component {\r\n    render() {\r\n        let {tags} = this.props;\r\n        if(tags === undefined){\r\n            tags = [];\r\n        }\r\n        return (\r\n            <div className=\"tag-display\">\r\n                {tags.map((item, i) =>\r\n                    <Label key={i} color='purple' size='big'>\r\n                        {item}\r\n                    </Label>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DisplayingTagsPost;","import React from 'react';\r\nimport \"../css/PostCards.css\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"../css/Forum.css\"\r\nimport DisplayingTagsPost from \"./DisplayingTagsPost\";\r\nimport axios from 'axios';\r\n\r\nclass OriginalPoster extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstPoster: this.props.firstPoster,\r\n            postID: this.props.postID,\r\n            name: this.props.name,\r\n            title: this.props.title,\r\n            tags: this.props.tags,\r\n            datetime: this.props.datetime,\r\n            karma: this.props.karma,\r\n            content: this.props.content,\r\n            isFollowing: false\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://kiwi-test-app.herokuapp.com/posts/isFollowing',\r\n            data: {\r\n                post_id: this.state.postID\r\n            }\r\n        }).then((response) => {\r\n            this.setState({\r\n                isFollowing: response.data.isFollowing\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const handleFollow = () => {\r\n            axios({\r\n                method: 'post',\r\n                url: 'https://kiwi-test-app.herokuapp.com/posts/follow',\r\n                data: {\r\n                    post_id: this.state.postID\r\n                }\r\n            }).then((response) => {\r\n                this.setState({\r\n                    isFollowing: true\r\n                });\r\n            });\r\n        };\r\n\r\n        const handleUnfollow = () => {\r\n            axios({\r\n                method: 'post',\r\n                url: 'https://kiwi-test-app.herokuapp.com/posts/unfollow',\r\n                data: {\r\n                    post_id: this.state.postID\r\n                }\r\n            }).then((response) => {\r\n                this.setState({\r\n                    isFollowing: false\r\n                });\r\n            });\r\n        };\r\n\r\n        return (\r\n            <div className={\"original-post\"}>\r\n                <div className={\"header\"}>\r\n                    <h1 className={\"title\"} style={{ color: \"black\" }}>{this.state.title}</h1>\r\n                </div>\r\n                <div className={\"postInfo\"}>\r\n                    <div>\r\n                        <h2 className={\"postID\"}>{\"ID: \" + this.state.postID}</h2>\r\n                    </div>\r\n                    <div className={\"postBy\"}>\r\n                        <h2>{\"Posted by: \" + this.state.name}</h2>\r\n                    </div>\r\n                    {this.state.firstPoster ? null :\r\n                        !this.state.isFollowing ?\r\n                            (<span>\r\n                                <button className={\"button\"} onClick={handleFollow}>Follow Post</button>\r\n                            </span>) :\r\n                            (<span>\r\n                                <button className={\"button\"} onClick={handleUnfollow}>Unfollow Post</button>\r\n                            </span>)\r\n                    }\r\n                </div>\r\n                <div className={\"content\"}>\r\n                    <p className={\"text-content\"}>{this.state.content}</p>\r\n                </div>\r\n                <div className={\"bottom-section\"}>\r\n                    <div className={\"datetime\"}>\r\n                        <h1 className={\"karma\"}>\r\n                            {this.props.hasEndorsed ? <button className={\"button\"} onClick={() => { this.props.scrollEndorsed() }}>View Endorsed</button> : null}\r\n                        </h1>\r\n                        <h3 className={\"createdDate\"}>{\"Created on: \" + this.state.datetime}</h3>\r\n                    </div>\r\n                    <div className={\"tagList\"}>\r\n                        <DisplayingTagsPost tags={this.state.tags} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(OriginalPoster);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport \"../css/Forum.css\"\r\nimport axios from 'axios'\r\n\r\nclass Response extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstPoster: this.props.firstPoster,\r\n            name: this.props.name,\r\n            datetime: this.props.datetime,\r\n            karma: this.props.karma,\r\n            content: this.props.content,\r\n            endorsed: this.props.endorsed,\r\n            userUpvoted: this.props.userUpvoted,\r\n            responseID: this.props.responseID\r\n        };\r\n    }\r\n\r\n    upvoteSwitch = () => {\r\n        if (this.state.userUpvoted === true) { // logic for removing upvote\r\n            axios({\r\n                method: 'post',\r\n                url: 'https://kiwi-test-app.herokuapp.com/response/UndoUpvote',\r\n                data: {\r\n                    response_id: this.state.responseID\r\n                },\r\n                withCredentials: true\r\n            })\r\n                .then((response) => {\r\n                    if (response.data.success) {\r\n                        // Wait until update processes before redirecting\r\n                        this.setState({\r\n                            userUpvoted: false,\r\n                            karma: this.state.karma - 1\r\n                        });\r\n                    } else {\r\n                        alert(\"Removing upvote was not processed. Try again.\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        } else { // userUpvoted === false, add upvote\r\n            axios({\r\n                method: 'post',\r\n                url: 'https://kiwi-test-app.herokuapp.com/response/UpvoteResponse',\r\n                data: {\r\n                    response_id: this.state.responseID\r\n                },\r\n                withCredentials: true\r\n            })\r\n                .then((response) => {\r\n                    if (response.data.success) {\r\n                        // Wait until update processes before redirecting\r\n                        this.setState({\r\n                            userUpvoted: true,\r\n                            karma: this.state.karma + 1\r\n                        })\r\n                    } else {\r\n                        alert(\"Upvote was not processed. Try again.\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }\r\n\r\n    endorseSwitch = () => {\r\n        if (this.state.endorsed === true) { // logic for removing endorsement\r\n            axios({\r\n                method: 'post',\r\n                url: 'https://kiwi-test-app.herokuapp.com/response/undoEndorse',\r\n                data: {\r\n                    response_id: this.state.responseID\r\n                },\r\n                withCredentials: true\r\n            })\r\n                .then((response) => {\r\n                    if (response.data.success) {\r\n                        // Wait until update processes before redirecting\r\n                        this.props.postUnendorse() // change post\r\n                        this.setState({\r\n                            endorsed: false\r\n                        });\r\n                    } else {\r\n                        alert(\"Removing endorsement was not processed. Try again.\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        } else { // userUpvoted === false, add upvote\r\n            if (this.props.isPostEndorsed !== null) { // the post is endorsed!\r\n                alert(\"This post already has an endorsement. Please remove the other endorsement if you wish to endorse this instead.\")\r\n            } else { // post not endorsed, we're good\r\n                axios({\r\n                    method: 'post',\r\n                    url: 'https://kiwi-test-app.herokuapp.com/response/EndorseResponse',\r\n                    data: {\r\n                        response_id: this.state.responseID\r\n                    },\r\n                    withCredentials: true\r\n                })\r\n                    .then((response) => {\r\n                        if (response.data.success) {\r\n                            this.props.postEndorse(this.state.responseID)\r\n                            this.setState({\r\n                                endorsed: true\r\n                            })\r\n                            // Wait until update processes before redirecting\r\n                        } else {\r\n                            alert(\"Endorsement was not processed. Try again.\");\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"response-post\"} ref={this.props.myRef}>\r\n                <div className={\"leftSide\"}>\r\n                    <div className={\"rPoster\"}>\r\n                        <h2 className={\"responder\"}>{this.state.name + \": \"}</h2>\r\n                    </div>\r\n                    <div className={\"rDate\"}>\r\n                        <h3>{\"Created on: \"}{\"\\n\"}{this.state.datetime}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className={\"middleContent\"}>\r\n                    <div className={\"rContent\"}>\r\n                        <p className={\"text-content\"}>{this.state.content}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={\"rightSide\"}>\r\n                    <div className={\"rStar\"}>\r\n                        {this.state.endorsed ? <Icon name=\"star\" color={\"yellow\"} size={\"big\"} /> : <div />}\r\n                    </div>\r\n                    {this.state.firstPoster ? <div><button className={\"button\"} onClick={this.endorseSwitch}>{this.state.endorsed ? \"Unendorse\" : \"Endorse\"}</button></div> : <div></div>}\r\n                    <div className={\"rKarma\"}>\r\n                        <h1><button className={\"button\"} onClick={this.upvoteSwitch.bind(this)}>{this.state.userUpvoted ? \"Remove Upvote\" : \"Upvote\"}</button>{\"   + \" + this.state.karma}</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Response);","import React from 'react';\n\n//component used when the post fails to load\nexport default class Failure extends React.Component {\n\n    render() {\n        return (<div>Failed to load</div>)\n    }\n}\n","import React from 'react';\r\nimport \"../css/Forum.css\"\r\nimport '../css/App.css';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"../css/AddResponse.css\"\r\n\r\n\r\nclass AddResponse extends React.Component {\r\n\r\n    addResponse = (event) => {\r\n        event.preventDefault();\r\n        const { responseText } = event.target.elements;\r\n        axios.defaults.withCredentials = true;\r\n        axios({\r\n            method: 'POST',\r\n            url: 'https://kiwi-test-app.herokuapp.com/response/AddResponse',\r\n            data: {\r\n                post_id: this.props.postID,\r\n                content: responseText.value,\r\n            },\r\n            withCredentials: true\r\n        })\r\n\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    // Wait until update processes before redirecting\r\n                    // Redirect to home page\r\n                    // this.props.history.refresh(this.props.postID);\r\n                    this.props.responseUpdate()\r\n                    responseText.value = \"\"\r\n                } else {\r\n                    alert(\"Response was not created. Try again.\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.addResponse}>\r\n                <div className=\"AddResponse-submission\">\r\n                    <div className={\"writingReply\"}>\r\n                        <textarea name={\"responseText\"} className={\"responseText\"} placeholder={\"Write your response here.\"} />\r\n                        <div className={\"postResponse\"}>\r\n                            <button className={\"button\"}>Post Response</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AddResponse);\r\n","import React, { useRef } from 'react';\r\nimport '../css/Home.css';\r\nimport '../css/App.css';\r\nimport OriginalPoster from \"../components/OriginalPoster\";\r\nimport Response from \"../components/Response\";\r\nimport Failure from '../components/Failure'\r\nimport axios from 'axios'\r\nimport TitleBar from \"../components/TitleBar\";\r\nimport AddResponse from \"../components/AddResponse\";\r\n\r\nclass ViewPost extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.latestResponse = 0;\r\n        this.lockResponse = false;\r\n        this.endorsedRef = React.createRef()\r\n\r\n        this.state = {\r\n            endorsedID: null,\r\n            createdPost: false,\r\n            loaded: false,\r\n            postID: props.id,\r\n            userID: \"\",\r\n            users: {},\r\n            title: \"Post Not Found\",\r\n            tags: [],\r\n            datetime: \"\",\r\n            content: \"\",\r\n            OP: \"\",\r\n            karma: 0,\r\n            responseObjs: [],\r\n            responseText: [],\r\n            responseIDs: [],\r\n            failed: false,\r\n        }\r\n    }\r\n\r\n    responseHTML = (obj, index, postEndorsed, responseIDs) => {\r\n        return (<Response key={index}\r\n            myRef={obj.endorsed ? this.endorsedRef : null}\r\n            firstPoster={this.state.createdPost}\r\n            datetime={obj.datetime}\r\n            content={obj.content}\r\n            karma={obj.karma}\r\n            endorsed={obj.endorsed}\r\n            name={this.getName(obj.user_id)}\r\n            isPostEndorsed={postEndorsed}\r\n            postEndorse={this.postEndorse.bind(this)}\r\n            postUnendorse={this.postUnendorse.bind(this)}\r\n            responseID={responseIDs[index]}\r\n            userUpvoted={obj.userUpvoted} />)\r\n    }\r\n\r\n    getName = (userid) => {\r\n        let name = \"Deleted User\";\r\n        if (this.state.users !== undefined && this.state.users[userid] !== undefined) {\r\n            name = this.state.users[userid].firstName + \" \" + this.state.users[userid].lastName;\r\n\r\n        }\r\n        return name;\r\n    }\r\n\r\n    upvotedMerge = (arr1, arr2) => {\r\n        for (var key in arr2) {\r\n            arr1[key].userUpvoted = arr2[key]\r\n        }\r\n        return arr1\r\n    }\r\n\r\n    refreshForNewResponse = () => { this.refreshResponse(this.state.endorsedID) }\r\n\r\n    refreshResponse = (postEndorsed) => {\r\n        this.endorsedRef = React.createRef()\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/posts/' + this.props.id.toString(),\r\n        }).then((results) => {\r\n            // do this to convince javascript that responses is an array\r\n            var responses = [], responseIDs = [], responseText = []\r\n            responses = this.upvotedMerge(results.data.responses, results.data.responseBools)\r\n            if (responses) { // now convinced that it is an array...\r\n                responseText = Object.values(responses)\r\n                responseIDs = Object.keys(responses)\r\n\r\n                // update variables! offset is how many we already have, latest response is all the responses we've now read\r\n                this.latestResponse = responses.length\r\n\r\n                // update the state to have the new response objects\r\n                this.setState({\r\n                    responseText: responseText,\r\n                    responseIDs: responseIDs,\r\n                    responseObjs: responseText.map((obj, i) => this.responseHTML(obj, i, postEndorsed, responseIDs))\r\n                })\r\n            }\r\n        }).catch((error) => { console.log(error); this.setState({ failed: true }) })\r\n    }\r\n\r\n    postEndorse = (id) => {\r\n        this.refreshResponse(id)\r\n        this.setState({\r\n            endorsedID: id\r\n        })\r\n    }\r\n\r\n    postUnendorse = () => {\r\n        this.refreshResponse(null)\r\n        this.setState({\r\n            endorsedID: null\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // TODO: THESE CAN BE ASYNC AS LONG AS BOTH ARE RETRIEVED BEFORE RENDER\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/posts/' + this.props.id.toString(),\r\n        }).then((results) => {\r\n            console.log(results.data);\r\n            var responses = []\r\n            responses = this.upvotedMerge(results.data.responses, results.data.responseBools)\r\n            var responseText = [], responseIDs = []\r\n            if (responses) {\r\n                responseText = Object.values(responses)\r\n                responseIDs = Object.keys(responses)\r\n            }\r\n            console.log(responseText)\r\n            this.setState({\r\n                createdPost: results.data.createdPost,\r\n                title: results.data.posts.title,\r\n                tags: results.data.posts.tag_ids,\r\n                datetime: results.data.posts.date_time,\r\n                karma: results.data.posts.karma,\r\n                responseText: responseText,\r\n                responseIDs: responseIDs,\r\n                content: results.data.posts.content,\r\n                userID: results.data.posts.user_id,\r\n                loaded: false,\r\n                failed: false,\r\n            })\r\n\r\n        })\r\n            .then(() => {\r\n                axios({\r\n                    method: 'get',\r\n                    url: 'https://kiwi-test-app.herokuapp.com/users/allUsers',\r\n                })\r\n                    .then((response) => {\r\n                        if (response.status === 200) {\r\n                            this.setState({ users: response.data });\r\n                        }\r\n                    })\r\n                    .then(() => {\r\n                        // get endorsed response, assuming only one in backend which will be enforced by frontend\r\n                        for (var i = 0; i < this.state.responseText.length; ++i) {\r\n                            if (this.state.responseText[i].endorsed === true) {\r\n                                this.setState({\r\n                                    endorsedID: this.state.responseIDs[i]\r\n                                })\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        this.latestResponse = this.state.responseText.length\r\n\r\n                        this.setState({\r\n                            responseObjs: this.state.responseText.map((obj, i) => this.responseHTML(obj, i, this.state.endorsedID, this.state.responseIDs)),\r\n                            OP: this.getName(this.state.userID),\r\n                            loaded: true\r\n                        })\r\n                    }).catch((error) => {\r\n                        console.log(error);\r\n                        this.setState({ failed: true })\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                        this.setState({ failed: true })\r\n                    })\r\n            })\r\n\r\n    }\r\n\r\n    scrollEndorsed = () => {\r\n        if (this.endorsedRef.current) {\r\n            this.endorsedRef.current.scrollIntoView({\r\n                behavior: 'smooth'\r\n            })\r\n            console.log(\"scrolling to\")\r\n            console.log(this.endorsedRef)\r\n            console.log(this.endorsedRef.current.offsetTop)\r\n        } else {\r\n            console.log(\"nothing to scroll to\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { createdPost, postID, userID, title, tags, datetime, content, karma, responseObjs, loaded, failed, OP } = this.state;\r\n\r\n        if (this.state.loaded) {\r\n            return (\r\n                <div className={\"container\"}>\r\n                    <div>\r\n                        <TitleBar title=\"Post\" />\r\n                        <div className=\"posts-container\">\r\n                            <OriginalPoster firstPoster={createdPost} postID={postID} userID={userID} title={title}\r\n                                tags={tags} datetime={datetime} karma={karma}\r\n                                content={content} name={OP} scrollEndorsed={this.scrollEndorsed.bind(this)} hasEndorsed={this.state.endorsedID} />\r\n                            <a className={\"content-link\"} href=\"#responseAdding\"><button className={\"renderResponse\"}>Reply</button></a>\r\n                            {responseObjs}\r\n                            <div id={\"responseAdding\"}>\r\n                                <AddResponse postID={postID} responseUpdate={this.refreshForNewResponse.bind(this)} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            );\r\n        } else if (!loaded && !failed) {\r\n            return (<div> <TitleBar title=\"Post\" /> <div className=\"posts-container\"> Loading... </div> </div>)\r\n        } else {\r\n            return <Failure />\r\n        }\r\n    }\r\n}\r\n\r\nexport default ViewPost;\r\n","import React from 'react';\r\nimport \"../css/PostCreate.css\"\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Dropdown } from \"semantic-ui-react\"\r\n\r\nclass PostCreate extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //firstPoster: this.props.firstPoster,\r\n            //postID: this.props.postID,\r\n            //name: this.props.name,\r\n            //title: this.props.title,\r\n            //tags: this.props.tags,\r\n            // datetime: this.props.datetime,\r\n            // karma: this.props.karma,\r\n            // content: this.props.content\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"post-create\"}>\r\n                <input className=\"titleBox\" name=\"title\" placeholder=\"Post Title\" />\r\n                <textarea className=\"postContent\" name=\"postContent\" placeholder=\"Post Content\" />\r\n                <div className={\"publish-section\"}>\r\n                    <Dropdown fluid multiple selection clearable search scrolling text=\"tags\" options={this.props.dropdownOpt} onChange={this.props.dropdownChange} value={this.props.dropdownVal} />\r\n                    <button type=\"Publish Post\"> Publish Post </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(PostCreate);","import React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport TitleBar from \"../components/TitleBar\"\r\nimport PostCreate from \"../components/PostCreate\"\r\n\r\n\r\nclass CreatePost extends React.Component {\r\n\r\n    state = { tags_selected: [], tags: [] };\r\n\r\n    componentWillMount() {\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://kiwi-test-app.herokuapp.com/tags/',\r\n        })\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    for (var key in response.data.tags) {\r\n                        var x = response.data.tags[key].key;\r\n                        this.setState({ tags: [...this.state.tags, { key: x, text: x, value: x }] });\r\n                    }\r\n                } else {\r\n                    console.log(\"bad\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    sendPost = (event) => {\r\n        event.preventDefault();\r\n        // should tag_ids be in line below\r\n        const { title, postContent } = event.target.elements;\r\n        axios.defaults.withCredentials = true;\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://kiwi-test-app.herokuapp.com/posts/CreatePost',\r\n            data: {\r\n                title: title.value,\r\n                tag_ids: this.state.tags_selected,\r\n                content: postContent.value,\r\n            },\r\n            withCredentials: true\r\n        })\r\n\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    // Wait until update processes before redirecting\r\n                    this.props.history.replace('/');\r\n                } else {\r\n                    alert(\"Post was not created. Try again.\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    getTags = (event, { value }) => {\r\n\r\n        if (value.length > 5) {\r\n            alert(\"Too many tags selected\");\r\n            return;\r\n        } else {\r\n            // tags_selected is value of array\r\n            this.setState({ tags_selected: value });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <div>\r\n                    <TitleBar title=\"Create New Post\" />\r\n                    <div className=\"posts-container\">\r\n                        <form onSubmit={this.sendPost}>\r\n                            <PostCreate dropdownOpt={this.state.tags} dropdownChange={this.getTags.bind(this)} dropdownVal={this.state.tags_selected} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default withRouter(CreatePost);","import React from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport './css/App.css';\r\n\r\n\r\nimport Home from './routes/Home';\r\nimport SignUp from './routes/SignUp';\r\nimport AdminSignUp from './routes/AdminSignUp'\r\nimport Login from './routes/Login';\r\nimport PrivateRoute from './auth/PrivateRoute';\r\nimport Settings from \"./routes/Settings\";\r\nimport AdminPage from \"./routes/AdminPage\"\r\nimport UserTags from './routes/UserTags';\r\n\r\n//<PrivateRoute path=\"/\" exact render={(props) => <Home {...props}/>}/>\r\nimport ViewPost from './routes/ViewPost';\r\n//import CreatePosts from './routes/CreatePosts'\r\n\r\n// algolia -> posts [(id,content, whatever)]\r\n// click post->[search firebase data for this postID, content, resposnes]\r\n// postid ->from firebase\r\n\r\n// post -> click (dont pass down props CONTENT from algolia was this, display this)\r\n// kiwis.tech/company/forum/POSTID\r\n// route /POSTID:\r\n// return the proper post information.\r\n\r\nimport CreatePost from './routes/CreatePost';\r\n\r\n\r\n\r\n\r\n\r\n//<Route path=\"/signup\" exact render={(props) => <Login {...props}/> }/> we took this out\r\nfunction App() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Route path=\"/login\" exact render={(props) => <Login {...props} />} />\r\n\t\t\t<Route path=\"/signup\" exact render={(props) => <SignUp {...props} />} />\r\n\t\t\t<PrivateRoute path=\"/viewPost/:id\" dynamic={true} component={ViewPost} />\r\n\t\t\t<Route path=\"/signup/:id\" exact render={(props) => <SignUp {...props} />} />\r\n\t\t\t<PrivateRoute exact path=\"/\" component={Home} />\r\n\t\t\t<PrivateRoute exact path=\"/createPost\" component={CreatePost} />\r\n\t\t\t<Route path=\"/userTags\" exact render={(props) => <UserTags {...props} />} />\r\n\t\t\t<Route path=\"/adminsignup\" exact render={(props) => <AdminSignUp {...props} />} />\r\n\t\t\t<PrivateRoute exact path=\"/settings\" component={Settings} />\r\n\t\t\t<PrivateRoute exact path=\"/adminPage\" component={AdminPage} />\r\n\t\t</div>\r\n\t);\r\n}\r\n//<PrivateRoute exact path=\"/createPost\" component={CreatePosts} />\r\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {AuthProvider} from './auth/Auth';\r\n\r\nReactDOM.render(\r\n\t<AuthProvider>\r\n  \t<BrowserRouter>\r\n    \t<App />\r\n  \t</BrowserRouter>\r\n\t</AuthProvider>, \r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/vectorlogo.42df0b1f.png\";"],"sourceRoot":""}